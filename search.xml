<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>CCP_lecture1_note</title>
      <link href="/2022/02/25/ccp_lecture1/"/>
      <url>/2022/02/25/ccp_lecture1/</url>
      
        <content type="html"><![CDATA[<table><thead><tr><th>Edited by 颍川散人</th><th>Data: 2022.2.23</th></tr></thead></table><ul><li><p>KB(10^3)和KIB(2^10)，同样有M，G，T等</p></li><li><p>personal mobile device (PMD)：电池，联网，贵（卡脖子在电池</p></li><li><p>Cloud Computing：</p><p>Warehouse Scale Computers (WSCs)（大规模云计算，集群，阿里云百度云等，耗能大）</p><p>Software as a Service (SaaS)（平台无关的程序，底层虚拟机，负载平衡，任务可拆分）</p></li><li><p>机器语言，软硬件接口，什么决定程序的性能</p></li><li><p>performance &amp; cost (最少的cost做出最高的性能)</p></li><li><p>Performance（后两项为本课程的任务）</p><ul><li>Algorithm</li><li>Programming language, compiler, and architecture（语言，编译器，体系结构）</li><li>Processor and memory system（处理器，内存）</li><li>I/O system (hardware and operating system)</li></ul></li><li><p>Eight Great Ideas in Computer Architecture</p><ul><li>Design for Moore’s Law（摩尔定律）</li><li>Use Abstraction to Simplify Design（抽象简化设计）</li><li>Make the Common Case Fast（常用的跑得快一点）</li><li>Performance via Parallelism（并行）</li><li>Performance via Pipelining（流水线）</li><li>Performance via Prediction（预测）</li><li>Hierarchy of Memories（内外存层次化设计）</li><li>Dependability via Redundancy（可靠性，取舍可靠性和性能）</li></ul></li><li><p>Levels of Program Code(High-level language–Assembly language–Hardware representation从高级语言到底层)</p></li><li><p>冯诺伊曼架构</p></li><li><p>触摸屏（输入输出合二为一）</p><ul><li>multiple touch（并联数据通路，可以一起编码</li></ul></li><li><p>LCD screen（frame buffer）</p></li><li><p>存储</p><ul><li>volatile（断电数据丢失–内存）</li><li>nonvolatile memory（外存）（磁盘（易于恢复 ），flash盘（不能恢复数据），光盘（长期保存））</li></ul></li><li><p>网络</p></li><li><p>Defining performance: response time(反应时间），throughput（吞吐量–单位时间能做多少任务）</p></li><li><p>性能主要看cpu时间，并行时考虑吞吐量</p></li><li><p>relative performance</p></li><li><p>measuring executing time（主要算cpu时间）</p></li><li><p>CPU time ：周期数乘以周期时间（以高频率，主频越高越好）clock time * clock cycles</p></li><li><p>CPU Time = （instruction Count * CPI）/Clock Rate（指令数乘以完成每个指令需要的周期数）</p></li><li><p>CPI = 周期数 / 指令数 （平均每个指令的周期数）</p></li><li><p>Power C =0.5* apacitiveload * Voltage * Frequency switched</p></li><li><p>Multiprocessors（片内并行，降低主频，重点在于装载平衡，优化同步通讯）</p></li><li><p>CPU Benchmark（CPU 跑分）（找到CPU的缺陷）（算性能算power）</p><ul><li>SPEC CPU Benchmark</li><li>SPEC POWER Benchmark</li></ul></li><li><p>Amdahl’s Law（改进了多少）改进后 = 改进部分/改进倍数 + 未改进部分</p></li><li><p>Concluding Remarks</p></li></ul>]]></content>
      
      
      <categories>
          
          <category> CCP </category>
          
      </categories>
      
      
        <tags>
            
            <tag> note </tag>
            
            <tag> CCP </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>DB_Lab1 DBMS的安装和使用</title>
      <link href="/2022/02/25/DB_Lab1/"/>
      <url>/2022/02/25/DB_Lab1/</url>
      
        <content type="html"><![CDATA[<table><thead><tr><th>Edited by 颍川散人</th><th>Data: 2022.2.25</th></tr></thead></table><h2 id="实验目的"><a href="#实验目的" class="headerlink" title="实验目的"></a>实验目的</h2><ul><li>通过安装某个数据库管理系统，初步了解DBMS的运行环境</li><li>了解DBMS交互界面、图形界面和系统管理工具的使用</li><li>搭建实验平台</li></ul><h2 id="实验平台"><a href="#实验平台" class="headerlink" title="实验平台"></a>实验平台</h2><ul><li>操作系统：macOS</li><li>数据库管理系统：MySQL</li></ul><h2 id="实验内容和要求"><a href="#实验内容和要求" class="headerlink" title="实验内容和要求"></a>实验内容和要求</h2><h4 id="1-根据官方文档，安装DBMS"><a href="#1-根据官方文档，安装DBMS" class="headerlink" title="1.根据官方文档，安装DBMS"></a>1.根据官方文档，安装DBMS</h4><p>官网（<a href="https://dev.mysql.com/downloads/mysql/%EF%BC%89%E4%B8%8B%E8%BD%BD%E5%AE%89%E8%A3%85%E5%90%8E%EF%BC%8C%E6%89%93%E5%BC%80terminal%EF%BC%8C%E9%85%8D%E7%BD%AE%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F">https://dev.mysql.com/downloads/mysql/）下载安装后，打开terminal，配置环境变量</a></p><p>输入指令<code>vim ~/.zshrc</code></p><p>在文件中写入<code>alias mysql=/usr/local/mysql/bin/mysql</code>,wq保存退出</p><p>输入指令<code>source ~/.zshrc</code></p><p>输入指令<code>mysql --version</code>,得到以下结果</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/usr/local/mysql/bin/mysql Ver 8.0.28 for macos11 on arm64 (MySQL Community Server - GPL)</span><br></pre></td></tr></table></figure><p>说明安装成功</p><h4 id="2-了解DBMS的用户管理"><a href="#2-了解DBMS的用户管理" class="headerlink" title="2.了解DBMS的用户管理"></a>2.了解DBMS的用户管理</h4><h5 id="2-1-添加用户"><a href="#2-1-添加用户" class="headerlink" title="2.1 添加用户"></a>2.1 添加用户</h5><p>在shell键入指令<code>mysql -u root -p</code>并输入密码，以root用户登陆数据库</p><p>键入指令<code>create user user_1 identified by &#39;12345678&#39;;</code>创建了用户user_1,并设置了密码为12345678</p><p>在mysql.user表中可以查看用户的信息</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; select User,Host from mysql.user where user = &#x27;user_1&#x27;;</span><br><span class="line">+--------+------+</span><br><span class="line">| User   | Host |</span><br><span class="line">+--------+------+</span><br><span class="line">| user_1 | %    |</span><br><span class="line">+--------+------+</span><br><span class="line">1 row in set (0.01 sec)</span><br></pre></td></tr></table></figure><h5 id="2-2-授权"><a href="#2-2-授权" class="headerlink" title="2.2 授权"></a>2.2 授权</h5><p>可以通过语句<code>show grants for &#39;user_1&#39;;</code>来查看权限</p><p>可以用以下指令赋予制定用户对指定数据库的操作权限</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">grant all privileges on test.* to user_1@&#x27;%&#x27;;</span><br><span class="line">flush privileges;</span><br></pre></td></tr></table></figure><p>可以通过指令<code>show grants for &#39;user_1&#39;;</code>来查看用户权限</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; show grants for &#x27;user_1&#x27;;</span><br><span class="line">+--------------------------------------------------+</span><br><span class="line">| Grants for user_1@%                              |</span><br><span class="line">+--------------------------------------------------+</span><br><span class="line">| GRANT USAGE ON *.* TO `user_1`@`%`               |</span><br><span class="line">| GRANT ALL PRIVILEGES ON `test`.* TO `user_1`@`%` |</span><br><span class="line">+--------------------------------------------------+</span><br><span class="line">2 rows in set (0.02 sec)</span><br></pre></td></tr></table></figure><ul><li><p><code>privilegesCode</code>（授予权限类型）：</p><p>all privileges （所有权限）select（读取权限）delete（删除权限）update（更新权限）create（更新权限）drop（删除数据库数据表权限）</p></li><li><p><code>dbName.tableName</code>（授予权限的具体数据库或数据表）</p><ul><li><code>.</code>授予所有数据库的权限</li><li><code>dbName.*</code>授予dbName数据库的所有数据表的权限</li><li><code>dbName.dbTable</code>授予dbName数据库中dbTable数据表的权限</li></ul></li><li><p><code>username@host</code>表示授予的用户以及允许该用户登录的IP地址。其中Host有以下几种类型：</p><ul><li><code>localhost</code> 只允许本机登陆</li><li><code>%</code>允许除了本机以外任意一台机器远程登录</li><li><code>103.135.248.242</code>具体的ip地址表示只允许特定ip的用户登录</li></ul></li></ul><h5 id="2-3-修改密码"><a href="#2-3-修改密码" class="headerlink" title="2.3 修改密码"></a>2.3 修改密码</h5><p>运行以下指令可以修改用户的密码</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">set password for &#x27;user_1&#x27;@&#x27;%&#x27; = &#x27;88888888&#x27;;</span><br><span class="line">flush privileges;</span><br></pre></td></tr></table></figure><h5 id="2-4-删除用户"><a href="#2-4-删除用户" class="headerlink" title="2.4 删除用户"></a>2.4 删除用户</h5><p>运行以下指令可以删除用户</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">drop user user_1@&#x27;%&#x27;;</span><br></pre></td></tr></table></figure><h4 id="3-熟悉基本的交互命令"><a href="#3-熟悉基本的交互命令" class="headerlink" title="3.熟悉基本的交互命令"></a>3.熟悉基本的交互命令</h4><h5 id="3-1-创建、删除、选择数据库"><a href="#3-1-创建、删除、选择数据库" class="headerlink" title="3.1 创建、删除、选择数据库"></a>3.1 创建、删除、选择数据库</h5><p>创建数据库</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">create database 数据库名;</span><br></pre></td></tr></table></figure><p>删除数据库</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">drop database 数据库名;</span><br></pre></td></tr></table></figure><p>选择数据库</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">use 数据库名;</span><br></pre></td></tr></table></figure><h5 id="3-2-数据类型"><a href="#3-2-数据类型" class="headerlink" title="3.2 数据类型"></a>3.2 数据类型</h5><ul><li><p>数值类型：</p><ul><li>TINYINT(1 Bytes) 小整数</li><li>SMALLINT(2 Bytes) 大整数</li><li>MEDIUMINT(3 Bytes) 大整数</li><li>INT(4 Bytes) 大整数</li><li>BIGINT(8 Bytes) 大整数</li><li>FLOAT(4 Bytes) 单精度浮点数</li><li>DOUBLE(8 Bytes) 双精度浮点数</li><li>DECIMAL(对DECIMAL(M,D) ，如果M&gt;D，为M+2否则为D+2) 小数</li></ul></li><li><p>日前和时间类型</p><ul><li>DATE(3 Bytes) 日期值，格式：YYYY-MM-DD</li><li>TIME(3 Bytes) 时间值或持续时间，格式：HH：MM：SS</li><li>YEAR(1 Bytes) 年份值，格式：YYYY</li><li>DATETIME(8 Bytes) 混合日期和时间，格式：YYYY-MM-DD HH：MM：SS</li><li>TIMESTAMP(4 Bytes) 混合日期和时间值，时间戳，格式：YYYYMMDD HHMMSS</li></ul></li><li><p>字符串类型</p><ul><li>CAHR 定长字符串</li><li>VARCHAR 变长字符串</li><li>TINYBLOG  不超过 255 个字符的二进制字符串</li><li>TINYTEXT 短文本字符串</li><li>BLOG  二进制形式的长文本数据</li><li>TEXT 长文本数据</li><li>MEDIUMBLOG 二进制形式的中等长度文本数据</li><li>MEDIUMTEXT  中等长度文本数据</li><li>LONGBLOG  二进制形式的极大文本数据</li><li>LONGTEXT 极大文本数据</li></ul></li></ul><h5 id="3-3-创建、删除数据表"><a href="#3-3-创建、删除数据表" class="headerlink" title="3.3 创建、删除数据表"></a>3.3 创建、删除数据表</h5><p>创建数据表的通用语法如下</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">create table tableName(column_name column_type);</span><br></pre></td></tr></table></figure><p>例子：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; create table student(id INT,name VARCHAR(20));</span><br><span class="line">Query OK, 0 rows affected (0.08 sec)</span><br></pre></td></tr></table></figure><p>删除数据表</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">　drop table tabelName;</span><br></pre></td></tr></table></figure><h5 id="3-4插入查询更新删除数据"><a href="#3-4插入查询更新删除数据" class="headerlink" title="3.4插入查询更新删除数据"></a>3.4插入查询更新删除数据</h5><p>插入的语法形式如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">insert into tableName(att_1,att_2,att_3,...,att_n) values(val_1,val_2,val_3,...,val_n);</span><br></pre></td></tr></table></figure><p>拿上边创建的表举例子，输入以下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">insert into student(id,name) values(1,&#x27;hahaha&#x27;);</span><br></pre></td></tr></table></figure><p>完成插入后，可以输入下面的指令查询插入数据</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; select * from student;</span><br><span class="line">+------+--------+</span><br><span class="line">| id   | name   |</span><br><span class="line">+------+--------+</span><br><span class="line">|    1 | hahaha |</span><br><span class="line">+------+--------+</span><br><span class="line">1 row in set (0.01 sec)</span><br></pre></td></tr></table></figure><p>此外还有一种更简洁的插入方法，其中values顺序需要和定义的一致</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">insert into tableName values(val_1,val_2,val_3,...,val_n);</span><br></pre></td></tr></table></figure><p>也可以只插入其中的一部分</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; insert into student(id) values(2);</span><br><span class="line">Query OK, 1 row affected (0.04 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; select * from student;</span><br><span class="line">+------+--------+</span><br><span class="line">| id   | name   |</span><br><span class="line">+------+--------+</span><br><span class="line">|    1 | hahaha |</span><br><span class="line">|    2 | NULL   |</span><br><span class="line">+------+--------+</span><br><span class="line">2 rows in set (0.01 sec)</span><br></pre></td></tr></table></figure><p>也可以插入多条</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; insert into student(id,name) values(3,&#x27;lalala&#x27;),(4,&#x27;xixixi&#x27;);</span><br><span class="line">Query OK, 2 rows affected (0.01 sec)</span><br><span class="line">Records: 2  Duplicates: 0  Warnings: 0</span><br><span class="line"></span><br><span class="line">mysql&gt; select * from student;</span><br><span class="line">+------+--------+</span><br><span class="line">| id   | name   |</span><br><span class="line">+------+--------+</span><br><span class="line">|    1 | hahaha |</span><br><span class="line">|    2 | NULL   |</span><br><span class="line">|    3 | lalala |</span><br><span class="line">|    4 | xixixi |</span><br><span class="line">+------+--------+</span><br><span class="line">4 rows in set (0.00 sec</span><br></pre></td></tr></table></figure><p>使用以下指令来更新</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">update tableName set att_1 = val_1,att_2 = val_2 where ...;</span><br></pre></td></tr></table></figure><p>例如</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; update student set name=&#x27;ok&#x27; where id=&#x27;3&#x27;;</span><br><span class="line">Query OK, 1 row affected (0.06 sec)</span><br><span class="line">Rows matched: 1  Changed: 1  Warnings: 0</span><br><span class="line"></span><br><span class="line">mysql&gt; select * from student;</span><br><span class="line">+------+--------+</span><br><span class="line">| id   | name   |</span><br><span class="line">+------+--------+</span><br><span class="line">|    1 | hahaha |</span><br><span class="line">|    2 | NULL   |</span><br><span class="line">|    3 | ok     |</span><br><span class="line">|    4 | xixixi |</span><br><span class="line">+------+--------+</span><br><span class="line">4 rows in set (0.01 sec)</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>去掉where限定的话可以更新所有数据</p><p>删除特定的数据记录</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">delete from tableName where ...;</span><br></pre></td></tr></table></figure><p>例子：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; delete from student where id =&#x27;4&#x27;;</span><br><span class="line">Query OK, 1 row affected (0.04 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; select * from student;</span><br><span class="line">+------+--------+</span><br><span class="line">| id   | name   |</span><br><span class="line">+------+--------+</span><br><span class="line">|    1 | hahaha |</span><br><span class="line">|    2 | NULL   |</span><br><span class="line">|    3 | ok     |</span><br><span class="line">+------+--------+</span><br><span class="line">3 rows in set (0.00 sec)</span><br></pre></td></tr></table></figure><p>不加限定where可以删除所有数据</p><h4 id="4-熟悉图形界面对数据库表的功能和操作"><a href="#4-熟悉图形界面对数据库表的功能和操作" class="headerlink" title="4.熟悉图形界面对数据库表的功能和操作"></a>4.熟悉图形界面对数据库表的功能和操作</h4><p>因为workbench不对apple silicon兼容，故无法使用图形界面工具，仅使用命令行指令</p><h4 id="5-了解基本的DBMS管理功能和操作"><a href="#5-了解基本的DBMS管理功能和操作" class="headerlink" title="5.了解基本的DBMS管理功能和操作"></a>5.了解基本的DBMS管理功能和操作</h4>]]></content>
      
      
      <categories>
          
          <category> DB_Lab </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Database System </tag>
            
            <tag> Lab </tag>
            
            <tag> MySQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Database System-lecture_1</title>
      <link href="/2022/02/25/database%20system%20lecture_1/"/>
      <url>/2022/02/25/database%20system%20lecture_1/</url>
      
        <content type="html"><![CDATA[<table><thead><tr><th>Edited by 颍川散人</th><th>Data: 2022.2.25</th></tr></thead></table><p>Query databases, design databases, build applications with them</p><p>名校数据库：</p><ul><li><p>MIT 6.830/6.814</p></li><li><p>CMU CS15-445</p></li><li><p>UCB CS186</p></li><li><p>Stanford CS145</p></li><li><p>UIUC CS411</p></li></ul><p>范围：</p><ul><li>Chapter 1~7（原理）</li><li>Chapter 12~19（设计）</li></ul><h2 id="Introduction"><a href="#Introduction" class="headerlink" title="Introduction"></a>Introduction</h2><p>what is database</p><p>database system(又称为管理系统DBMS)包含：</p><ul><li>一堆数据(data)</li><li>一堆访问数据的程序（program to access）</li><li>一个支持高效便捷使用的环境（macOS，Linux，…)</li></ul><p>database system管理的数据：</p><ul><li>highly valuable（价值高）</li><li>relatively large（数据量大）</li><li>Accessed by multiple users and applications, often at the same time（多人同时访问）</li></ul><p>database management system: mySQL, SQlite, …</p><p>概念：database, database system, DBMS</p><p>Database applications:</p><ul><li>interprise（企业） : sales accounting HR</li><li>Manufacturing（生产）</li><li>banking and finance（银行和金融）</li><li>University </li><li>Airlines </li><li>Telecommunications （通讯）</li><li>Web-bases service（朋友圈，在线销售，广告）</li><li>Document databases</li><li>Navigation service</li></ul><p>早期数据库建立在文件系统上（computer-based file + C program to access), 数据冗余和不一致，access数据难度和数据隔离性完整性不佳，更新的原子性（减和加一定全部完成，当成一个操作，没全部完成就要重新来，不存在中间状态），并发访问（concurrent access），安全问题）</p><p>university database example：data and application </p><p>View of data（数据视图）重要的是给用户一个数据的抽象视图</p><ul><li>Data models（数据模型）<ul><li>Data </li><li>Data relationships</li><li>Data semantics</li><li>Data constraints</li><li>四类模型：Relational，Entity-Relationship data model，Object-based data models ，Semi-structured data model</li></ul></li><li>Data abstraction（数据抽象）</li></ul><p>relational model（关系模型）All the data is stored in various tables</p><p>view of data : 物理层面–逻辑层面（有点像struct）–view level（不同的人看到不同的信息for security ）</p><p>Instances (实例) and schemas(模式)（就像变量和类型）（logical schema，physical schema）</p><p>Data definition language（数据定义语言DDL）</p><p>Data dictionary contains metadata(data of data)</p><p>data manipulation language（数据操纵语言DML）（查询语言）：</p><ul><li>Procedural DML（过程性：具体告诉机器那些数据需要和如何获取）</li><li>Declarative DML（描述性：描绘了一个事情）</li></ul><p>SQL Query Language(SQL 查询语言)（不是图灵完备语言）（embedded 嵌入式的，或接口调用）</p><p>be written in a host language(C/C++)</p><p>Database design（逻辑设计（决定database schema，物理设计）</p><p>database engine</p><p>一个database system可以被分为以下功能模块：</p><ul><li>The storage manager（存储管理器）<ul><li>Interaction with the OS file manager</li><li>Efficient storing, retrieving and updating of data</li><li>实现一些数据结构：data files, data dictionary(store metadata), indices(索引)</li></ul></li><li>The  <strong>query processor</strong> component<ul><li>DDL interpreter</li><li>DML compiler</li><li>Query evaluation engine</li></ul></li><li>The transaction management component<ul><li>Manage 原子性， 突然断电， 一致性，并发性，etc</li></ul></li></ul><p>Database architecture:</p><ul><li>Centralized databases（集中在中心）</li><li>Client-server（客户服务器）</li><li>Parallel databases（并发数据库）</li><li>Distributed databases（分布式）</li></ul><p>Database Applications</p><ul><li>两层结构application—- network—- database system</li><li>三层结构application client—- network—- application server—- database system（做到轻量级用户端）</li></ul><p>Database Users</p><ul><li>DBA（超级用户）</li><li>naive user</li><li>application programmer</li><li>sophisticated user</li></ul><p>history of database system</p><ul><li>1950s~1960s 穿孔纸</li><li>1960s~1970s hard disk，关系数据模型，Network and hierarchical data models</li><li>1980s SQL，并发和面向对象database system</li><li>1990s 大容量存储介质，Large decision support and data-mining applications</li><li>2000s 大数据存储系统，大数据分析</li><li>2010s SQL reloaded</li></ul><p>main DBMS products:</p><ul><li>Commercial : MS SQL Server</li><li>Open source: mySQL</li></ul><p><strong>HW: Ex 1.7, 1.8, 1.9, 1.15</strong></p><p><strong>1.7 List four significant differences between a file-processing system and a DBMS</strong></p><p>the significant differences between a file-processing system and a DBMS:</p><ul><li>the file-processing system may lead to data redundancy and inconsistency（数据冗余和不一致）, but a DBMS not</li><li>the difficult in accessing data have difference</li><li>the data isolation have difference, it is impossible for a file to open different areas to different users</li><li>Atomicity problems（原子问题）, such as reduce and add data must be considered as one operate. This is DBMS specific</li><li>Concurrent-access（并发访问）and security problems.</li></ul><p><strong>1.8 Explain the concept of physical data independence and its importance in database systems.</strong></p><p>Physical data independence is defined as the ability to make changes to the lowest level of DBMS, but without affecting the logical and the view level.Physical data independence helps to separate conceptual levels from the internal or physical level.Allows us to provide a logical description of the database without the need to specify the physical structures.</p><p><strong>1.9 List five responsibilities of a database-management system. For each responsi- bility, explain the problems that would arise if the responsibility were not dis- charged.</strong></p><p>Five responsbilities:</p><ul><li><p>Interaction with the File Manager（和文件管理器的交互）</p><p>if there is no interaction with the file manager, then nothing stored in the files can be retrieved.</p></li><li><p>Integrity Enforcement</p><p>if not, consistency constraints may not be satisfied（一致性约束可能无法满足）</p></li><li><p>Security Enforcement（安全）</p><p>if not, users can freely access content they do not have permission to access</p></li><li><p>Backup and Recovery（备份和回溯）</p><p>if not, data may be permanently lost and cannot be traced back</p></li><li><p>Concurrency Control（并发访问）</p><p>if not, although each operation is fully executed, the consistency constraint may still not be satisfied</p></li></ul><p><strong>1.15 Describe at least three tables that might be used to store information in a social- networking system such as Facebook.</strong></p><ul><li>one user table contains the id, name, hometown, or any other thing of users.</li><li>one group table contains the id, name, etc of groups </li><li>the friend table contains the friends of each user</li></ul>]]></content>
      
      
      <categories>
          
          <category> DB_note </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Database System </tag>
            
            <tag> note </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>missing-semester-lecture1-shell</title>
      <link href="/2022/02/06/missing-semester-lecture1-shell/"/>
      <url>/2022/02/06/missing-semester-lecture1-shell/</url>
      
        <content type="html"><![CDATA[<table><thead><tr><th>Edited by 颍川散人</th><th>Data: 2022.2.4</th></tr></thead></table><p><strong>1.Create a new directory called <code>missing</code> under <code>/tmp</code>.</strong></p><p>首先找到 <code>/tmp</code> 目录位置</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">mac@192 ~ % pwd</span><br><span class="line">/Users/mac</span><br><span class="line">mac@192 ~ % cd ..</span><br><span class="line">mac@192 /Users % pwd</span><br><span class="line">/Users</span><br><span class="line">mac@192 /Users % ls</span><br><span class="line">GuestSharedmac</span><br><span class="line">mac@192 /Users % cd ..</span><br><span class="line">mac@192 / % pwd </span><br><span class="line">/</span><br><span class="line">mac@192 / % ls</span><br><span class="line">ApplicationsVolumesetcsbin</span><br><span class="line">Librarybinhometmp</span><br><span class="line">Systemcoresoptusr</span><br><span class="line">Usersdevprivatevar</span><br></pre></td></tr></table></figure><p>使用指令 <code>cd tmp</code> 进入 <code>/tmp</code> 目录下</p><p>使用指令 <code>mkdir missing</code>  在当前 <code>/tmp</code> 目录下创建新的 <code>missing</code> 目录</p><p><strong>2.Look up the <code>touch</code> program. The <code>man</code> program is your friend.</strong></p><p>使用 <code>man + 指令名称 </code> 可以跳转到指令对应的技术文档，以查阅相关用法</p><p>在这里我们使用 <code>man touch</code></p><p><strong>3.Use <code>touch</code> to create a new file called <code>semester</code> in <code>missing</code>.</strong></p><p>当前在 <code>/tmp</code> 目录下，需要先进入 <code>/tmp/missing</code> 目录，然后用touch指令新建semester文件</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd missing</span><br><span class="line">touch semester</span><br></pre></td></tr></table></figure><p>检查发现 <code>/tmp/missing</code> 下已经有了 <code>semester</code> 文件</p><p><strong>4.Write the following into that file, one line at a time:</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">#!/bin/sh</span><br><span class="line">curl --head --silent https://missing.csail.mit.edu</span><br></pre></td></tr></table></figure><p><strong>5.The first line might be tricky to get working. It’s helpful to know that <code>#</code> starts a comment in Bash, and <code>!</code> has a special meaning even within double-quoted (<code>&quot;</code>) strings. Bash treats single-quoted strings (<code>&#39;</code>) differently: they will do the trick in this case. See the Bash <a href="https://www.gnu.org/software/bash/manual/html_node/Quoting.html">quoting</a> manual page for more information.</strong></p><p>当前仍处在 <code>/tmp/missing</code> 目录下，直接用<code>echo</code>命令和<code>&gt;</code>运算符向<code>semester</code>文件中写入内容</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">➜  missing echo &#x27;#!/bin/sh&#x27; &gt;semester</span><br><span class="line">➜  missing echo &#x27;curl --head --silent https://missing.csail.mit.edu&#x27; &gt;&gt;semester</span><br></pre></td></tr></table></figure><p>其中运算符<code>&gt;</code>是重写覆盖，运算符<code>&gt;&gt;</code>是追加内容，会自动换行</p><p>使用指令<code>cat</code>来查看<code>semester</code>文件内容，发现内容已经正确写入</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">➜  missing cat semester</span><br><span class="line"><span class="meta">#</span><span class="language-bash">!/bin/sh</span></span><br><span class="line">curl --head --silent https://missing.csail.mit.edu</span><br></pre></td></tr></table></figure><p>可以发现在写入第一行内容时，如果使用双引号<code>&quot;</code>而非单引号<code>&#39;</code>会报错</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">➜  missing echo &quot;#!/bin/sh&quot; &gt; semester</span><br><span class="line">zsh: event not found: /bin/sh</span><br></pre></td></tr></table></figure><p>这就是提示中告诉我们的，<code>#</code>和<code>!</code>在双引号中也表示特殊含义，所以最好用单引号来书写内容</p><p><strong>6.Try to execute the file, i.e. type the path to the script (<code>./semester</code>) into your shell and press enter. Understand why it doesn’t work by consulting the output of <code>ls</code> (hint: look at the permission bits of the file).</strong></p><p>先按照题目要求把<code>./semester</code>输入到shell中，按下enter，返回错误</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">➜  missing ./semester</span><br><span class="line">zsh: permission denied: ./semester</span><br></pre></td></tr></table></figure><p>我们根据提示关注一下文件的权限位，用<code>ls -l 文件名</code>查看文件的权限位</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">➜  missing ls -l semester</span><br><span class="line">-rw-r--r--  1 mac  wheel  9  2  4 15:57 semester</span><br></pre></td></tr></table></figure><p>权限位有10位，第一位表示了文件类型，<code>-</code>表示普通文件，<code>d</code>表示目录</p><p>跟在后面的9位分三组，每三位一组</p><p>r表是读 (Read) 、w表示写 (Write) 、x表示执行 (Execute)</p><p>第一组表示文件拥有者的权限，第二组表示文件所属组拥有的权限，最后一组表示其他用户拥有的权限</p><p>可见，该文件无法被执行</p><p><strong>7.Run the command by explicitly starting the <code>sh</code> interpreter, and giving it the file <code>semester</code> as the first argument, i.e. <code>sh semester</code>. Why does this work, while <code>./semester</code> didn’t?</strong></p><p>直接输入命令<code>sh semester</code>按下回车运行，可见脚本文件成功执行</p><p><code>sh</code>命令是运行Linux或macOS脚本文件的，解析脚本的操作和执行文件不同，因为<code>semester</code>不是可执行文件，所以<code>./semester</code>无法运行而<code>sh</code>可以</p><p><strong>8.Look up the <code>chmod</code> program (e.g. use <code>man chmod</code>).</strong></p><p>输入命令<code>man chmod</code>查看<code>chmod</code></p><p><strong>9.Use <code>chmod</code> to make it possible to run the command <code>./semester</code> rather than having to type <code>sh semester</code>. How does your shell know that the file is supposed to be interpreted using <code>sh</code>? See this page on the <a href="https://en.wikipedia.org/wiki/Shebang_(Unix)">shebang</a> line for more information</strong></p><p>由上述操作可知因为<code>semester</code>文件缺少可执行权限而无法被直接运行，用<code>chmod</code>命令可以为其增加可执行权限</p><p>使用以下指令</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">➜  missing chmod u+x semester</span><br></pre></td></tr></table></figure><p>该指令为user增加可执行权限，使用<code>ls</code>查看权限，发现确实增加了可执行权限</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">➜  missing ls -l semester</span><br><span class="line">-rwxr--r--  1 mac  wheel  61  2  4 22:56 semester</span><br></pre></td></tr></table></figure><p>再次输入<code>./semester</code>发现脚本文件可以被顺利执行</p><p><strong>10.Use <code>|</code> and <code>&gt;</code> to write the “last modified” date output by <code>semester</code> into a file called <code>last-modified.txt</code> in your home directory.</strong></p><p><code>|</code>指令可以把<code>|</code>左边的输出作为右边的输入，比如这个指令<code>ls -l / | tail -n1</code>,就是把<code>ls -l /</code>的输出结果作为<code>tail -n1</code>的输入，最终输出主目录信息的最后一行</p><p>就这一问，首先要获取<code>./semester</code>输出内容的第四行，也就是<code>last-modified</code>的内容</p><p>想获取文件指定行的内容，可以用指令<code>tail -n+k filename | head -n1</code>,该指令先获取文件从第k行以后的内容，然后输出该内容的第一行，也就是原文件的第k行</p><p>所以可以用以下指令完成题目要求</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">➜  missing ./semester | tail -n+4 | head -n1 | &gt;last-modified.txt</span><br><span class="line">➜  missing cat last-modified.txt</span><br><span class="line">last-modified: Tue, 11 Jan 2022 16:37:26 GMT</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> missing-semester </category>
          
      </categories>
      
      
        <tags>
            
            <tag> shell </tag>
            
            <tag> MIT </tag>
            
            <tag> 习题 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
